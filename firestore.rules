
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    
    function isAdmin() {
      return request.auth.uid in ['Td5P02zpyaMR3IxCY9eCf7gcYky1', 'yawuIwXKVbNhsBQSqWfGZyAzZ3A3'];
    }

    // Function to check if only the 'characters' field is being updated.
    // This is used for relationship updates between users.
    function isUpdatingOnlyCharacters() {
      return request.resource.data.diff(resource.data).affectedKeys().hasOnly(['characters']);
    }

    match /users/{userId} {
      allow read: if request.auth != null;
      allow create: if request.auth.uid == userId;
      // Allow a user to update their own document OR
      // allow any authenticated user to update another user's document IF
      // they are only changing the 'characters' field (for relationship sync).
      allow update: if request.auth.uid == userId || 
                      (request.auth != null && isUpdatingOnlyCharacters()) ||
                      isAdmin();
      allow delete: if request.auth.uid == userId || isAdmin();

      match /reward_requests/{requestId} {
        allow write: if request.auth.uid == userId || isAdmin();
        allow read: if request.auth.uid == userId || isAdmin();
      }
    }

    match /post_requests/{requestId} {
      allow read: if request.auth != null;
      allow create: if request.auth.uid == request.resource.data.sourceUserId;
      allow update, delete: if isAdmin() || 
                              request.auth.uid == request.resource.data.sourceUserId ||
                              request.auth.uid == request.resource.data.targetUserId;
    }

    match /{path=**}/reward_requests/{requestId} {
      allow read: if isAdmin();
    }

    match /exchange_requests/{requestId} {
      allow read: if request.auth != null;
      allow create: if request.auth.uid == request.resource.data.creatorUserId;
      // Allow creator to delete/cancel, allow any other user to update (to accept)
      allow update, delete: if request.auth.uid == resource.data.creatorUserId || 
                              (request.resource.data.status == 'closed' && request.auth.uid != resource.data.creatorUserId);
    }

    match /familiar_trade_requests/{requestId} {
      allow read: if request.auth != null;
      allow create: if request.auth.uid == request.resource.data.initiatorUserId;
      allow update, delete: if request.auth.uid == resource.data.initiatorUserId || request.auth.uid == resource.data.targetUserId || isAdmin();
    }
    
    match /game_settings/{settingsId} {
      allow read: if request.auth != null;
      allow write: if isAdmin();
    }
  }
}
