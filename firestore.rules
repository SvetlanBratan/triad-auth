
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
  
    // Default deny all reads and writes unless explicitly allowed
    match /{document=**} {
      allow read, write: if false;
    }

    // --- USER DATA RULES ---
    // Allow authenticated users to read user profiles for leaderboards, etc.
    // Allow users to write ONLY to their own document.
    // Allow admins to write to ANY user document.
    match /users/{userId} {
      allow read: if request.auth != null;
      allow write: if request.auth != null && (request.auth.uid == userId || get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin');

      // Rules for the 'reward_requests' subcollection
      match /reward_requests/{requestId} {
        // Users can create and read their own requests
        allow create, read: if request.auth != null && request.auth.uid == userId;
        // Admins can update/delete any request
        allow update, delete: if request.auth != null && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
      }
    }
    
    // --- COLLECTION GROUP RULES ---
    // Admins can list all reward requests from the 'reward_requests' collection group.
    match /{path=**}/reward_requests/{requestId} {
      allow read: if request.auth != null && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }
    
    // --- EXCHANGE REQUESTS RULES ---
    match /exchange_requests/{requestId} {
      // Any authenticated user can read the list of open requests.
      allow get, list: if request.auth != null;
      
      // A user can create a request if they are the owner of the data.
      allow create: if request.auth != null
                    && request.resource.data.creatorUserId == request.auth.uid
                    && request.resource.data.creatorName == request.auth.token.name;

      // The creator can delete (cancel) their own request.
      // An acceptor can update the request to 'closed'.
      // An admin can do anything.
      allow update, delete: if request.auth != null && (
        (resource.data.creatorUserId == request.auth.uid) ||
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin'
      );
    }

    // --- FAMILIAR TRADE REQUESTS RULES ---
    match /familiar_trade_requests/{requestId} {
      // Any authenticated user can read trade requests.
      allow read: if request.auth != null;

      // A user can create a request if they are the initiator.
      allow create: if request.auth != null && request.resource.data.initiatorUserId == request.auth.uid;

      // The target of the request can update it (accept/decline).
      // The initiator of the request can update it (cancel).
      // Admins can do anything.
      allow update: if request.auth != null && (
        (resource.data.targetUserId == request.auth.uid) ||
        (resource.data.initiatorUserId == request.auth.uid) ||
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin'
      );

       // The initiator of the request can delete it (cancel). Admins too.
      allow delete: if request.auth != null && (
        (resource.data.initiatorUserId == request.auth.uid) ||
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin'
      );
    }
    
    // --- GLOBAL SETTINGS RULES ---
    // Allow anyone to read game settings, but only admins to write.
    match /game_settings/{settingId} {
      allow read: if true;
      allow write: if request.auth != null && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }
  }
}
