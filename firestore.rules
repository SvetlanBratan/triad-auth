
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
  
    // Helper function to check for admin role
    function isAdmin() {
      return get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }

    // Rules for the 'users' collection
    match /users/{userId} {
      // ANY authenticated user can read user profiles (for leaderboards, viewing profiles)
      // and admins can list all users.
      allow read: if request.auth != null;
      
      // Users can update THEIR OWN document. Admins can update ANY document.
      allow write: if request.auth.uid == userId || isAdmin();
      
      // Rules for 'reward_requests' subcollection
      match /reward_requests/{requestId} {
        // A user can create a request for themselves.
        allow create: if request.auth.uid == userId;
        // Admins can read and update any request. Users can read their own.
        allow read, update: if isAdmin() || request.auth.uid == userId;
        // Only admins can delete requests (e.g., clearing history).
        allow delete: if isAdmin();
      }
    }
    
    // Rules for the 'game_settings' collection
    match /game_settings/{settingId} {
      // Any authenticated user can read the game settings (like the date).
      allow read: if request.auth != null;
      // Only admins can write to game settings.
      allow write: if isAdmin();
    }
  }
}
